package components

import (
    "github.com/jsaterdalen/manabase"
    "time"
	"github.com/google/uuid"
)

var today string = time.Now().Format("2006-01-02")

templ NewGameForm() {
    <form hx-post="/game" hx-swap="none" class="space-y-4 py-5">
        <label for="date">Date</label>
        <div class="mt-2" id="date-field">
            <input type="date" name="date" id="date" value={ today }/>
            <div id="date-validation"></div>
        </div>
        <h2>Players</h2>
        <div class="ml-4" hx-get="/newgame/players" hx-trigger="load" hx-swap="innerHTML"></div>
        <h2>Decks</h2>
        <div id="decks"></div>
        <button type="submit" class="px-4 py-2 rounded-md border border-gray-500">
            submit
        </button>
    </form>
}

templ PlayerFields(players []manabase.Player) {
    <fieldset id="players">
        <div class="mt-2">
            <select name="players" id="player-select" multiple
                hx-trigger="change delay:500ms"
                hx-get="/newgame/decks"
                hx-target="#decks">
            for _, player := range players {
                <option value={ player.ID.String() }>{ player.Name }</option>
            }
            </select>
        </div>
    </fieldset>
    <script type="text/javascript">
        (() => {
            const element = document.getElementById("player-select");
            const choices = new Choices(element, {
                maxItemCount: 6,
                removeItemButton: true,
                duplicateItemsAllowed: false,
            });
        })()
    </script>
}

templ DeckFields(playerMap map[uuid.UUID]string, decksByOwner map[uuid.UUID][]manabase.Deck) {
    <div class="mt-2 space-y-4">
        for playerID, playerName := range playerMap {
            <fieldset class="mt-4">
                <legend>{ playerName }'s Deck</legend>
                <div class="mt-2">
                    <select name={ "deck-" + playerID.String() } id={ "deck-" + playerID.String() }>
                        if decks, ok := decksByOwner[playerID]; ok {
                            for _, deck := range decks {
                                <option value={ deck.ID.String() }>{ deck.Name }</option>
                            }
                        }
                    </select>
                </div>
            </fieldset>
        }
    </div>
    <h2>Winner</h2>
    <div class="ml-4 mt-2">
        <fieldset>
        for playerID, playerName := range playerMap {
            <div class="flex items-center mb-2">
                <input type="radio" 
                    id={ "winner-" + playerID.String() }
                    name="winner" 
                    value={ playerID.String() }
                    class="mr-2"
                />
                <label for={ "winner-" + playerID.String() }>
                    { playerName }
                </label>
            </div>
        }
        </fieldset>
    </div>
}

templ DateValidation() {
    <div id="date-validation" hx-swap-oob="true">
        bad date
    </div>
}

templ WinnerSection(selectedPlayers []manabase.Player) {
   <h2>Winner</h2>
    <div class="ml-4 mt-2">
        <fieldset>
        for _, player := range selectedPlayers {
            <div class="flex items-center mb-2">
                <input type="radio" 
                    id="winner-{ player.ID }" 
                    name="winner" 
                    value="{ player.ID }"
                    class="mr-2"
                />
                <label for="winner-{ player.ID }">
                    { player.Name }
                </label>
            </div>
        }
        </fieldset>
    </div>
}